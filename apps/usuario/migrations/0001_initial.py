# Generated by Django 5.1.2 on 2024-11-08 15:50

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import localflavor.br.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(max_length=120, verbose_name='Nome completo do usuário')),
                ('cpf', localflavor.br.models.BRCPFField(max_length=14, unique=True, verbose_name='CPF')),
                ('username', models.EmailField(max_length=254, unique=True, verbose_name='E-mail do usuário')),
                ('email_institucional', models.EmailField(max_length=254, unique=True, verbose_name='Email Institucional')),
                ('rgm', models.CharField(max_length=8, unique=True, verbose_name='Registro Geral de Matrícula da Instituição')),
                ('telefone', models.CharField(blank=True, max_length=15, verbose_name='Número de Telefone')),
                ('curso', models.CharField(choices=[('ADS', 'Análise e Desenvolvimento de Sistemas'), ('CC', 'Ciência da Computação'), ('SI', 'Sistemas para Internet'), ('CD', 'Ciência de Dados'), ('OTR', 'Outros')], max_length=40, verbose_name='Curso')),
                ('cargo', models.CharField(choices=[('GESTOR', 'Gestor'), ('IMERSIONISTA', 'Imersionista'), ('NOVATO', 'Novato'), ('TECH_LEADER', 'Tech Leader'), ('VETERANO', 'Veterano')], max_length=15, verbose_name='Cargo')),
                ('ingresso_fab', models.DateField(blank=True, null=True, verbose_name='Data de ingresso na Fábrica de Software')),
                ('setor', models.CharField(blank=True, choices=[('GESTAO', 'Gestão'), ('BACK', 'Back-end'), ('DADOS', 'Dados'), ('DEVOPS', 'DevOps'), ('FRONT', 'Front-end'), ('IA', 'Inteligência Artificial'), ('JOGOS', 'Jogos'), ('MOBILE', 'Mobile'), ('PO', 'Product Owner'), ('QA', 'Quality Assurance'), ('UIUX', 'UI/UX')], max_length=23, null=True, verbose_name='Setor')),
                ('situacao', models.CharField(choices=[('ATIVO', 'Ativo'), ('INATIVO', 'Inativo'), ('ESTAGIANDO', 'Estagiando')], max_length=10, verbose_name='Situação')),
                ('is_bolsista', models.BooleanField(default=False, verbose_name='É bolsista?')),
                ('is_estagiario', models.BooleanField(default=False, verbose_name='É estagiário?')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação do usuário')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de atualização do usuário')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Experiencias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tecnologias', models.CharField(choices=[('IA', 'Bibliotecas de IA'), ('CSS', 'CSS'), ('DEPLOY', 'Deploy'), ('DJANGO_PYTHON', 'Django & Python'), ('DOCKER', 'Docker or VM'), ('.NET_CSHARP', '.Net & C#'), ('FIGMA', 'Figma ou Prototipagem'), ('FLUTTER', 'Flutter'), ('GIT', 'GIT'), ('HTML', 'HTML'), ('JAVA', 'Java'), ('JAVASCRIPT', 'JavaScript'), ('LARAVEL', 'Laravel & PHP'), ('LINUX', 'Linux'), ('NEXT_JS', 'Next.js'), ('NODEJS', 'Node.js'), ('PHP', 'PHP'), ('POSTGRESQL_MYSQL', 'PostgreSQL or MySQL'), ('POWER_BI', 'Power BI'), ('PYTHON', 'Python'), ('REACT_NATIVE', 'React Native'), ('SPRING', 'Spring'), ('TABLEU', 'Tableu'), ('TYPESCRIPT', 'TypeScript'), ('UNITY', 'Unity')], max_length=20, verbose_name='Tecnologias')),
                ('senioridade', models.CharField(choices=[('JUNIOR', 'Júnior'), ('PLENO', 'Pleno'), ('SENIOR', 'Sênior')], max_length=10, verbose_name='Senioridade')),
                ('descricao', models.TextField(verbose_name='Descrição da experiência')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação da experiência')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de atualização da experiência')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Experiência',
                'verbose_name_plural': 'Experiências',
            },
        ),
    ]
