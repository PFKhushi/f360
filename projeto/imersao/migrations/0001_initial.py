# Generated by Django 5.2 on 2025-07-07 18:05

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api_rest', '0021_alter_techleader_especialidade'),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaFabrica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Área da Fábrica',
                'verbose_name_plural': 'Áreas da Fábrica',
                'permissions': [('ver_areas_fabrica', 'Ver todas as Áreas da Fábrica'), ('editar_areas_fabrica', 'Editar todas as Áreas da Fábrica')],
            },
        ),
        migrations.CreateModel(
            name='Imersao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Imersão',
                'verbose_name_plural': 'Imersões',
                'permissions': [('ver_imersoes', 'Ver todas as imersões'), ('editar_imersoes', 'Editar todas as imersões')],
            },
        ),
        migrations.CreateModel(
            name='Tecnologia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tecnologia',
                'verbose_name_plural': 'Tecnologias',
                'permissions': [('ver_tecnologia', 'Ver todas as Tecnologias'), ('editar_tecnologia', 'Editar todas as Tecnologias')],
            },
        ),
        migrations.CreateModel(
            name='FormularioInscricao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inscricao', models.DateField(auto_now_add=True, help_text='Data em que o participante se inscreveu na imersão')),
                ('participante', models.ForeignKey(help_text='Participante que preencheu o formulário', on_delete=django.db.models.deletion.CASCADE, related_name='formularios_participante', to='api_rest.participante')),
                ('primeira_opcao', models.ForeignKey(help_text='Primeira opção de vaga que o participante deseja', on_delete=django.db.models.deletion.PROTECT, related_name='primeira_opcao_forms', to='imersao.areafabrica')),
                ('segunda_opcao', models.ForeignKey(help_text='Segunda opção de vaga que o participante deseja', on_delete=django.db.models.deletion.PROTECT, related_name='segunda_opcao_forms', to='imersao.areafabrica')),
                ('imersao', models.ForeignKey(help_text='Imersão a qual o participante se inscreveu', on_delete=django.db.models.deletion.PROTECT, related_name='formularios_imersao', to='imersao.imersao')),
                ('tecnologias', models.ManyToManyField(help_text='Tecnologias que o participante tem interesse', related_name='tecnologias_forms', to='imersao.tecnologia')),
            ],
            options={
                'verbose_name': 'Formulário de Inscrição',
                'verbose_name_plural': 'Formulários de Inscrição',
                'permissions': [('ver_formularios_workshop', 'Ver todas as Formulários de Inscrição'), ('editar_formularios_workshop', 'Editar todas as Formulários de Inscrição')],
                'unique_together': {('participante', 'imersao')},
            },
        ),
        migrations.CreateModel(
            name='Iteracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.IntegerField()),
                ('semestre', models.IntegerField()),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Iteração',
                'verbose_name_plural': 'Iterações',
                'permissions': [('ver_iteracoes', 'Ver todas as iterações'), ('editar_iteracoes', 'Editar todas as iterações')],
                'unique_together': {('ano', 'semestre')},
            },
        ),
        migrations.AddField(
            model_name='imersao',
            name='iteracao',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='imersao.iteracao'),
        ),
        migrations.CreateModel(
            name='Palestra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('data', models.DateTimeField(blank=True, null=True)),
                ('palestrante', models.CharField(max_length=255)),
                ('sala', models.CharField(blank=True, max_length=255, null=True)),
                ('bloco', models.CharField(blank=True, max_length=10, null=True)),
                ('imersao', models.ForeignKey(help_text='Imersão a qual a palestra pertence', on_delete=django.db.models.deletion.PROTECT, related_name='palestras_imersao', to='imersao.imersao')),
            ],
            options={
                'verbose_name': 'Palestra',
                'verbose_name_plural': 'Palestras',
                'permissions': [('ver_palestras', 'Ver todas as Palestras'), ('editar_palestras', 'Editar todas as Palestras')],
                'unique_together': {('imersao', 'titulo')},
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('sala', models.CharField(blank=True, max_length=255, null=True)),
                ('bloco', models.CharField(blank=True, max_length=3, null=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='imersao.areafabrica')),
                ('iteracao', models.ForeignKey(help_text='Iteração a qual o workshop pertence', on_delete=django.db.models.deletion.PROTECT, related_name='workshops_iteracao', to='imersao.iteracao')),
            ],
            options={
                'verbose_name': 'Workshop',
                'verbose_name_plural': 'Workshops',
                'permissions': [('ver_workshops', 'Ver todas as Workshops'), ('editar_workshop', 'Editar todas as Workshops')],
                'unique_together': {('iteracao', 'titulo')},
            },
        ),
        migrations.CreateModel(
            name='DiaWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField()),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dias_workshop', to='imersao.workshop')),
            ],
            options={
                'verbose_name': 'Dia de Workshop',
                'verbose_name_plural': 'Dias de Workshop',
                'permissions': [('ver_dias_workshops', 'Ver todos os Dias de Workshop'), ('editar_dias_workshops', 'Editar todos os Dias de Workshop')],
                'unique_together': {('workshop', 'data')},
            },
        ),
        migrations.CreateModel(
            name='DesafioWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(max_length=255)),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='desafio_participante', to='api_rest.participante')),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='desafio_workshop', to='imersao.workshop')),
            ],
            options={
                'verbose_name': 'Desafio do workshop',
                'verbose_name_plural': 'Desafios dos workshops',
                'db_table': '',
                'permissions': [('ver_desafios_workshop', 'Ver todos os Desafios dos workshops'), ('editar_desafios_workshop', 'Editar todos os Desafios dos workshops')],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InteresseArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.PositiveSmallIntegerField(help_text='Nível de interesse na área entre 0 e 5', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imersao.areafabrica')),
                ('formulario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interesses_forms', to='imersao.formularioinscricao')),
            ],
            options={
                'verbose_name': 'Interesse por Área',
                'verbose_name_plural': 'Interesses por Área',
                'permissions': [('ver_interesses_area', 'Ver todas as Interesses por Área'), ('editar_interesses_area', 'Editar todas as Interesses por Área')],
                'unique_together': {('formulario', 'area')},
            },
        ),
        migrations.CreateModel(
            name='ParticipacaoImersao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_participacao', models.DateField(auto_now_add=True)),
                ('imersao', models.ForeignKey(help_text='Imersão na qual o participante participou', on_delete=django.db.models.deletion.CASCADE, related_name='participantes_imersao', to='imersao.imersao')),
                ('participante', models.ForeignKey(help_text='Participante que participou da imersão', on_delete=django.db.models.deletion.CASCADE, related_name='imersoes_participadas', to='api_rest.participante')),
            ],
            options={
                'verbose_name': 'Participação na Imersão',
                'verbose_name_plural': 'Participações na Imersão',
                'permissions': [('ver_participacoes_imersao', 'Ver todos os Participações na Imersão'), ('editar_participacoes_imersao', 'Editar todos os Participações na Imersão')],
                'unique_together': {('participante', 'imersao')},
            },
        ),
        migrations.CreateModel(
            name='PresencaPalestra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_participacao', models.DateField(auto_now_add=True)),
                ('palestra', models.ForeignKey(help_text='Palestra na qual o participante participou', on_delete=django.db.models.deletion.CASCADE, related_name='participantes_palestra', to='imersao.palestra')),
                ('participante', models.ForeignKey(help_text='Participante que participou da palestra', on_delete=django.db.models.deletion.CASCADE, related_name='palestras_participadas', to='api_rest.participante')),
            ],
            options={
                'verbose_name': 'Presença na Palestra',
                'verbose_name_plural': 'Presenças na Palestra',
                'permissions': [('ver_presencas_palestras', 'Ver todos os Presenças na Palestra'), ('editar_presencas_palestras', 'Editar todos os Presenças na Palestra')],
                'unique_together': {('participante', 'palestra')},
            },
        ),
        migrations.CreateModel(
            name='PresencaWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_registro', models.DateField(auto_now_add=True)),
                ('dia_workshop', models.ForeignKey(help_text='Dia do workshop no qual o participante participou', on_delete=django.db.models.deletion.CASCADE, related_name='participantes_dia_workshop', to='imersao.diaworkshop')),
                ('participante', models.ForeignKey(help_text='Participante que participou do workshop', on_delete=django.db.models.deletion.CASCADE, related_name='workshops_participados', to='api_rest.participante')),
            ],
            options={
                'verbose_name': 'Presença no Workshop',
                'verbose_name_plural': 'Presenças no Workshop',
                'permissions': [('ver_presencas_workshops', 'Ver todas as Presenças nos Workshops'), ('editar_presencas_workshops', 'Editar todas as Presenças nos Workshops')],
                'unique_together': {('participante', 'dia_workshop')},
            },
        ),
        migrations.CreateModel(
            name='ParticipantesWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participante', models.ForeignKey(help_text='Participante inscrito no workshop', on_delete=django.db.models.deletion.CASCADE, related_name='workshops_participante', to='api_rest.participante')),
                ('workshop', models.ForeignKey(help_text='Workshop ao qual o participante está inscrito', on_delete=django.db.models.deletion.CASCADE, related_name='participantes_workshop', to='imersao.workshop')),
            ],
            options={
                'verbose_name': 'Participação no Workshop',
                'verbose_name_plural': 'Participações no Workshop',
                'permissions': [('ver_participantes_workshop', 'Ver todos os Desafios dos workshops'), ('editar_participantes_workshop', 'Editar todos os Desafios dos workshops')],
                'unique_together': {('participante', 'workshop')},
            },
        ),
        migrations.CreateModel(
            name='InstrutorWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extensionista', models.ForeignKey(help_text='Extensionista que é instrutor do workshop', on_delete=django.db.models.deletion.CASCADE, related_name='workshop_instruidos', to='api_rest.extensionista')),
                ('workshop', models.ForeignKey(help_text='Workshop ao qual o instrutor pertence', on_delete=django.db.models.deletion.CASCADE, related_name='instrutores_workshop', to='imersao.workshop')),
            ],
            options={
                'verbose_name': 'Instrutor do Workshop',
                'verbose_name_plural': 'Instrutores do Workshop',
                'permissions': [('ver_instrutores_workshops', 'Ver todos os Instrutores do Workshop'), ('editar_instrutores_workshops', 'Editar todos os Instrutores do Workshop')],
                'unique_together': {('workshop', 'extensionista')},
            },
        ),
        migrations.CreateModel(
            name='DesempenhoWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desempenho', models.CharField(max_length=255)),
                ('comentario', models.TextField(blank=True, null=True)),
                ('aprovado', models.BooleanField(default=False)),
                ('classificacao', models.CharField(max_length=255)),
                ('experiencia', models.CharField(max_length=255)),
                ('data_avaliacao', models.DateField(auto_now_add=True)),
                ('participante', models.ForeignKey(help_text='Participante que teve seu desempenho avaliado', on_delete=django.db.models.deletion.CASCADE, related_name='desempenho_workshops', to='api_rest.participante')),
                ('especialidade', models.ForeignKey(blank=True, help_text='Tecnologia que o participante se destacou no workshop', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='especialidade_desempenho', to='imersao.tecnologia')),
                ('workshop', models.ForeignKey(help_text='Workshop ao qual o desempenho se refere', on_delete=django.db.models.deletion.CASCADE, related_name='desempenhos_workshop', to='imersao.workshop')),
            ],
            options={
                'verbose_name': 'Desempenho no Workshop',
                'verbose_name_plural': 'Desempenhos nos Workshops',
                'permissions': [('ver_desempenhos_workshops', 'Ver todos os Desempenhos nos Workshops'), ('editar_desempenhos_workshops', 'Editar todos os Desempenhos nos Workshops')],
                'unique_together': {('participante', 'workshop')},
            },
        ),
    ]
