# Generated by Django 5.1.7 on 2025-04-22 02:42

import django.core.validators
import encrypted_model_fields.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api_rest', '0005_alter_techleader_options'),
    ]

    operations = [
        migrations.AddField(
            model_name='participante',
            name='outro_curso',
            field=models.CharField(blank=True, help_text='Caso o curso não esteja listado', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='participante',
            name='periodo',
            field=models.IntegerField(blank=True, help_text='Período atual do curso', null=True),
        ),
        migrations.AlterField(
            model_name='participante',
            name='cpf',
            field=encrypted_model_fields.fields.EncryptedCharField(help_text='Apenas números (11 dígitos)', unique=True, validators=[django.core.validators.RegexValidator('^\\d{11}$', message='CPF deve ter exatamente 11 dígitos')], verbose_name='CPF'),
        ),
        migrations.AlterField(
            model_name='participante',
            name='email_institucional',
            field=encrypted_model_fields.fields.EncryptedEmailField(help_text='E-mail acadêmico/institucional', unique=True, verbose_name='E-mail institucional'),
        ),
        migrations.AlterField(
            model_name='techleader',
            name='codigo',
            field=encrypted_model_fields.fields.EncryptedCharField(help_text='Registro Geral sem pontos ou traços', unique=True, validators=[django.core.validators.RegexValidator('^\\d+$', message='Código deve conter apenas números')], verbose_name='Código único que identifica Tech Leader'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='telefone',
            field=encrypted_model_fields.fields.EncryptedCharField(blank=True, help_text='Número para contato', null=True),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='username',
            field=encrypted_model_fields.fields.EncryptedEmailField(help_text='E-mail principal para login', unique=True, verbose_name='E-mail'),
        ),
    ]
