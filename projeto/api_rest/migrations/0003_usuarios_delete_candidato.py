# Generated by Django 5.1.7 on 2025-03-31 19:39

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api_rest', '0002_alter_candidato_telefone'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(max_length=120, verbose_name='Nome completo do usuário')),
                ('cpf', models.CharField(max_length=11, unique=True, verbose_name='CPF')),
                ('username', models.EmailField(max_length=254, unique=True, verbose_name='E-mail do usuário')),
                ('email_institucional', models.EmailField(max_length=254, unique=True, verbose_name='Email Institucional')),
                ('rgm', models.CharField(max_length=8, unique=True, verbose_name='Registro Geral de Matrícula da Instituição')),
                ('telefone', models.CharField(blank=True, max_length=15, verbose_name='Número de Telefone')),
                ('curso', models.CharField(choices=[('ADS', 'Análise e Desenvolvimento de Sistemas'), ('CC', 'Ciência da Computação'), ('SI', 'Sistemas para Internet'), ('CD', 'Ciência de Dados'), ('OTR', 'Outros')], max_length=40, verbose_name='Curso')),
                ('cargo', models.CharField(choices=[('GESTOR', 'Gestor'), ('IMERSIONISTA', 'Imersionista'), ('NOVATO', 'Novato'), ('TECH_LEADER', 'Tech Leader'), ('VETERANO', 'Veterano')], max_length=15, verbose_name='Cargo')),
                ('ingresso_fab', models.DateField(blank=True, null=True, verbose_name='Data de ingresso na Fábrica de Software')),
                ('setor', models.CharField(blank=True, choices=[('GESTAO', 'Gestão'), ('BACK', 'Back-end'), ('DADOS', 'Dados'), ('DEVOPS', 'DevOps'), ('FRONT', 'Front-end'), ('IA', 'Inteligência Artificial'), ('JOGOS', 'Jogos'), ('MOBILE', 'Mobile'), ('PO', 'Product Owner'), ('QA', 'Quality Assurance'), ('UIUX', 'UI/UX')], max_length=23, null=True, verbose_name='Setor')),
                ('situacao', models.CharField(choices=[('ATIVO', 'Ativo'), ('INATIVO', 'Inativo'), ('ESTAGIANDO', 'Estagiando')], max_length=10, verbose_name='Situação')),
                ('is_bolsista', models.BooleanField(default=False, verbose_name='É bolsista?')),
                ('is_estagiario', models.BooleanField(default=False, verbose_name='É estagiário?')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação do usuário')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de atualização do usuário')),
                ('groups', models.ManyToManyField(blank=True, related_name='usuarios_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuarios_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.DeleteModel(
            name='Candidato',
        ),
    ]
